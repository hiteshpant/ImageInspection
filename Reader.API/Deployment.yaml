apiVersion: apps/v1
kind: Deployment
metadata:
  name: sql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqldata
  template:
    metadata:
      labels:
        app: sqldata
    spec:
      containers:
      - name: sqldata
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: "Pass@word"
          - name: MSSQL_PID
            value: "Developer"
        ports:
          - containerPort: 1433

---
apiVersion: v1
kind: Service
metadata:
  name: sqldata
spec:
  selector:
    app: sqldata
  ports:
  - port: 1433

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          ports:
            - containerPort: 5672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
  - port: 5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reader-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reader-api
  template:
    metadata:
      labels:
        app: reader-api
    spec:
      initContainers:
          - name: init-sqldata
            image: busybox:1.28
            command: ['sh', '-c', 'until nslookup mydb; do echo waiting for mydb; sleep 2; done;']
          - name: init-rabbitmq
            image: busybox:1.28
            command: ['sh', '-c', 'until rabbitmq service; do echo waiting for rabbitmq; sleep 2; done;'] 
      containers:
      - name: reader-api
        image: hiteshpant/readerapi
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        env:
          - name: "ASPNETCORE_ENVIRONMENT"
            value: "Kubernetes-readerapi"
        volumeMounts:
        - name: secrets
          mountPath: /app/secrets
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: secret-reader-appsettings

---
apiVersion: v1
kind: Service
metadata:
  name: reader-service
spec:
  selector:
    app: reader-api
  ports:
  - port: 80
  type: LoadBalancer
